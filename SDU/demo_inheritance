#!/usr/bin/env python

from rdflib import Graph, Namespace, URIRef, Literal
import rdflib

RDF  = Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#')
RDFS = Namespace('http://www.w3.org/2000/01/rdf-schema#')
BF   = rdflib.Namespace('http://buildsys.org/ontologies/BrickFrame#')
TAGS = rdflib.Namespace('http://buildsys.org/ontologies/BrickTag#')
TS   = rdflib.Namespace('http://buildsys.org/ontologies/Brick#')

################################################################################
##################################################################### setup ####

g = rdflib.Graph()
g.bind('rdf' , RDF)
g.bind('rdfs', RDFS)
g.bind('bf'  , BF)
g.bind('tag' , TAGS)
g.bind('ts'  , TS)
result = g.parse('../BuildingSchema/BrickFrame.ttl', format='n3')
result = g.parse('../BuildingSchema/BrickTag.ttl', format='n3')
result = g.parse('../BuildingSchema/Brick.ttl', format='n3')

MyNS = rdflib.Namespace('http://buildsys.org/ontologies/examples/CollingTower#')
g.bind(':', MyNS)

cooling_tower = URIRef('ct')
g.add( (cooling_tower, RDF.type, TS['Cooling_Tower']) )

water_pump = URIRef('wp')
g.add( (water_pump, RDF.type, TS['Chilled_Water_Pump']) )

g.add( (cooling_tower, BF.feeds, water_pump) )

print('          [TagSet]')
print('              ^')
print('              |')
print('      +-------+------+ inherits')
print('      |              |')
print('[Cooling_Tower] [Chilled_Water_Pump]')
print('      |              |')
print('      | instance     | instance')
print('      |              |')
print('    (ct) --feeds--> (wp)')
print('')

################################################################################
############################################################### vague query ####

r = g.query("""SELECT DISTINCT ?ct ?wp 
    WHERE { 
      ?ct bf:feeds ?wp .  
    }""")

print('Matches for [(?) feeds (?)]:')
for pair in r:
    print('  %s -> %s' % pair)
print('total: '+str(len(r)) )
print('')

################################################################################
############################################################## direct query ####

r = g.query("""SELECT DISTINCT ?ct ?wp 
    WHERE { 
      ?ct a ts:Cooling_Tower .  
      ?wp a ts:Chilled_Water_Pump .  
      ?ct bf:feeds ?wp .  
    }""")

print('Matches for [Cooling_Tower feeds Water_Pump]:')
for pair in r:
    print('  %s -> %s' % pair)
print('total: '+str(len(r)) )
print('')

################################################################################
########################################################### inherited query ####


r = g.query(
    """SELECT DISTINCT ?ct ?wp
       WHERE {
          ?ct a ts:Cooling_Tower .
          ?wp a bf:TagSet .
          ?ct bf:feeds ?wp .
       }""")

print('Matches for [Cooling_Tower feeds TagSet]:')
for pair in r:
    print('  %s -> %s' % pair)
print('total: '+str(len(r)))
print('')

################################################################################
################################################## unrolled inherited query ####

r = g.query(
    """SELECT DISTINCT ?ct ?someclass ?wp
       WHERE {
          ?ct bf:feeds ?wp .
          ?ct a ts:Cooling_Tower .
          ?wp a ?someclass .
          ?someclass rdfs:subClassOf* bf:TagSet .
       }""")

print('Matches for [Cooling_Tower feeds (?) rdfs:subClassOf* bs:TagSet]:')
for pair in r:
    print('  %s -> %s -> %s' % pair)
print('total: '+str(len(r)) )
print('')

